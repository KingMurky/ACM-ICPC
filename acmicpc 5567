from heapq import heappop,heappush
import sys
INF=sys.maxsize

def dijkstra(start):
    q=[]
    dist=[INF]*(n+1)
    dist[start]=0
    heappush(q,[0,start])
    while q:
        cur_wei,cur_node=heappop(q)

        if dist[cur_node]<cur_wei:
            continue

        for wei, node in graph[cur_node]:
            new_wei=wei+cur_wei
            if new_wei<dist[node]:
                dist[node]=new_wei
                heappush(q,[new_wei,node])

    return dist


n=int(input())
m=int(input())
graph=[[] for _ in range(n+1)]

for _ in range(m):
    a,b=map(int,input().split())
    graph[a].append([1,b])
    graph[b].append([1,a])

dp=dijkstra(1)
cnt=0

for i in range(2,n+1):
    if dp[i]<=2:
        cnt+=1

print(cnt)
